```bsl
#Область ГенерацияЭлементовФормы_ОбщегоНазначения_КопированиеЭлементов

// ИмяКопируемогоЭлемента - это дерево имен так, как оно идет в дереве элементов формы
// Дерево нужно, чтобы изменять имена вложенных элементам при копировании, когда добавляем (изменить имя элемента потом нельзя)
// Механизм точно работает для полей формы, с другими элементами не проверял
// Код взял на просторах и доработал (дерево имен в том числе было добавлено)
Функция СоздатьКопиюЭлемента(Форма, ЭлементИсточника, ПрефиксКопии = "", ГруппаЭлементов = Неопределено, ИмяКопируемогоЭлемента = Неопределено, КопироватьПодчиненные = Истина)
    
    Тип = ТипЗнч(ЭлементИсточника);
	
	Если ТипЗнч(ИмяКопируемогоЭлемента) = Тип("ДеревоЗначений") Тогда
		ИмяКопируемогоЭлемента = ИмяКопируемогоЭлемента.Строки[0];
	КонецЕсли;
	
	Если ИмяКопируемогоЭлемента = Неопределено ИЛИ ИмяКопируемогоЭлемента.Имя = Неопределено Тогда
		ИмяЭлемента = ПрефиксКопии + ЭлементИсточника.Имя;
	Иначе
		ИмяЭлемента = ИмяКопируемогоЭлемента.Имя;	
	КонецЕсли;
	
    ЭлементПриемника = Форма.Элементы.Добавить(ИмяЭлемента, Тип, ГруппаЭлементов);
    
    Если Тип = Тип("ГруппаФормы") Тогда
        
        ЭлементПриемника.Вид = ЭлементИсточника.Вид;
        
        Если ЭлементИсточника.Вид = ВидГруппыФормы.ОбычнаяГруппа Тогда
            
            ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника,,"ПутьКДаннымЗаголовка");
            
        ИначеЕсли ЭлементИсточника.Вид = ВидГруппыФормы.Страницы Тогда
            
            ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника,, "ТекущаяСтраница");
            
            СкопироватьСобытия(ЭлементПриемника, ЭлементИсточника);
            
        ИначеЕсли ЭлементИсточника.Вид = ВидГруппыФормы.Страница Тогда
            
            ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника,, "ПутьКДаннымЗаголовка");
            
        ИначеЕсли ЭлементИсточника.Вид = ВидГруппыФормы.ГруппаКолонок Тогда
            
            ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника,, "ПутьКДаннымШапки");
            
        Иначе
            
            ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника);
            
		КонецЕсли; 
		
		Если КопироватьПодчиненные Тогда
        
        	СкопироватьПодчиненныеЭлементы(Форма, ЭлементПриемника, ЭлементИсточника, ПрефиксКопии, ИмяКопируемогоЭлемента.Строки);
			
		КонецЕсли;
        
    ИначеЕсли Тип = Тип("ПолеФормы") Тогда
        
        ЭлементПриемника.Вид = ЭлементИсточника.Вид;
        
        ЭлементПриемника.ПутьКДанным = ПрефиксКопии + ЭлементИсточника.ПутьКДанным;
        
        Если ЭлементИсточника.Вид = ВидПоляФормы.ПолеВвода Тогда
            
            ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника,, "ВыделенныйТекст, СвязьПоТипу, ПутьКДанным");
            
            Если  ЭлементИсточника.СвязьПоТипу.ПутьКДанным <> "" Тогда
                ПутьКДаннымСвязиПриемника = СтрЗаменить(ЭлементИсточника.СвязьПоТипу.ПутьКДанным, "Элементы." , "Элементы." + ПрефиксКопии);
                ЭлементПриемника.СвязьПоТипу = Новый СвязьПоТипу(ПутьКДаннымСвязиПриемника, ЭлементИсточника.СвязьПоТипу.ЭлементСвязи);    
            КонецЕсли; 
            ЗаполнитьКоллекциюСвойств(ЭлементПриемника.СписокВыбора, ЭлементИсточника.СписокВыбора);
            
        ИначеЕсли ЭлементИсточника.Вид = ВидПоляФормы.ПолеПереключателя Тогда
            
            ЗаполнитьКоллекциюСвойств(ЭлементПриемника.СписокВыбора, ЭлементИсточника.СписокВыбора);
            ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника,,"ПутьКДанным");
            
        ИначеЕсли ЭлементИсточника.Вид = ВидПоляФормы.ПолеТекстовогоДокумента Тогда
            
            ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника,,"ПутьКДанным, ВыделенныйТекст");
            
        ИначеЕсли ЭлементИсточника.Вид = ВидПоляФормы.ПолеФорматированногоДокумента Тогда
            
            ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника,,"ПутьКДанным, ВыделенныйТекст");
            
        Иначе
            
            ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника,,"ПутьКДанным");
            
        КонецЕсли; 
        
        СкопироватьСобытия(ЭлементПриемника, ЭлементИсточника);
        
    ИначеЕсли Тип = Тип("ТаблицаФормы") Тогда
        
        ЭлементПриемника.ПутьКДанным = ПрефиксКопии + ЭлементИсточника.ПутьКДанным;
        
        ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника,, "ПутьКДаннымКартинкиСтроки, ПутьКДанным, ДополнительныеПараметрыСоздания, ЗапросОбновления");
		
		Если КопироватьПодчиненные Тогда
			
			СкопироватьПодчиненныеЭлементы(Форма, ЭлементПриемника, ЭлементИсточника, ПрефиксКопии, ИмяКопируемогоЭлемента.Строки);
			
		КонецЕсли;
        
        СкопироватьКнопкиКоманднойПанелиТаблицы(Форма, ЭлементПриемника.КоманднаяПанель, ЭлементИсточника.КоманднаяПанель, ПрефиксКопии, ИмяКопируемогоЭлемента.Строки);
        
        СкопироватьСобытия(ЭлементПриемника, ЭлементИсточника);
        
    ИначеЕсли Тип = Тип("КнопкаФормы") Тогда
        
        ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника);
        
        СкопироватьКоманду(Форма, ЭлементПриемника, ЭлементИсточника, ПрефиксКопии, ИмяКопируемогоЭлемента.Строки);
        
    Иначе
        
        ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника);
		
		СкопироватьСобытия(ЭлементПриемника, ЭлементИсточника);
        
	КонецЕсли; 
	
	Возврат ЭлементПриемника;
    
КонецФункции

Процедура СкопироватьПодчиненныеЭлементы(Форма, Приемник, Источник, ПрефиксКопии = "", ИменаКопируемыхЭлементов = Неопределено) Экспорт
	
	Итератор = 0;
	Для Каждого ЭлементИсточника Из Источник.ПодчиненныеЭлементы Цикл
		Если ИменаКопируемыхЭлементов = Неопределено Тогда
			ИмяКопируемогоЭлемента = Неопределено;
		Иначе
			Попытка
				ИмяКопируемогоЭлемента = ИменаКопируемыхЭлементов.Получить(Итератор);
			Исключение
				ИмяКопируемогоЭлемента = Неопределено;
			КонецПопытки
		КонецЕсли;
        СоздатьКопиюЭлемента(Форма, ЭлементИсточника, ПрефиксКопии, Приемник, ИмяКопируемогоЭлемента);
		Итератор = Итератор + 1;
    КонецЦикла; 
    
КонецПроцедуры 

//////////////////////////
// Служебные

Процедура СкопироватьКнопкиКоманднойПанелиТаблицы(Форма, ГруппаКнопокПриемник, ГруппаКнопокИсточник, ПрефиксКопии = "", ИменаКопируемыхЭлементов = Неопределено) Экспорт
	
	Итератор = 0;
    Для Каждого ЭлементИсточника из ГруппаКнопокИсточник.ПодчиненныеЭлементы Цикл
        // Созданные элементы командных панелей таблиц должны содержать слово "кнопка" или "кнопки".

        // Это необходимо, чтобы отличить их от стандартных элементов, которые генерируются в источнике сами

		Если Найти(НРег(ЭлементИсточника.Имя), "кнопк") > 0 Тогда 
			
			Если ИменаКопируемыхЭлементов = Неопределено Тогда
				ИмяКопируемогоЭлемента = Неопределено;
			Иначе
				Попытка
					ИмяКопируемогоЭлемента = ИменаКопируемыхЭлементов.Получить(Итератор);
				Исключение
					ИмяКопируемогоЭлемента = Неопределено;
				КонецПопытки
			КонецЕсли;
					
			Если ИмяКопируемогоЭлемента = Неопределено ИЛИ ИмяКопируемогоЭлемента.Имя = Неопределено Тогда
				ИмяЭлемента = ПрефиксКопии + ЭлементИсточника.Имя;
			Иначе
				ИмяЭлемента = ИмяКопируемогоЭлемента.Имя;	
			КонецЕсли;

            
            Тип = ТипЗнч(ЭлементИсточника);
            ЭлементПриемника = Форма.Элементы.Добавить(ИмяЭлемента, Тип, ГруппаКнопокПриемник);
			Итератор = Итератор + 1;

            
            Если Тип = Тип("ГруппаФормы") Тогда
                
                ЭлементПриемника.Вид = ЭлементИсточника.Вид;
                
                ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника);
                
                СкопироватьКнопкиКоманднойПанелиТаблицы(Форма, ЭлементПриемника, ЭлементИсточника, ПрефиксКопии, ?(ИмяКопируемогоЭлемента <> Неопределено, ИмяКопируемогоЭлемента.Строки, Неопределено));
                
            ИначеЕсли Тип = Тип("КнопкаФормы") Тогда
                
                ЗаполнитьЗначенияСвойств(ЭлементПриемника, ЭлементИсточника);
                
                СкопироватьКоманду(Форма, ЭлементПриемника, ЭлементИсточника, ПрефиксКопии, ?(ИмяКопируемогоЭлемента <> Неопределено, ИмяКопируемогоЭлемента.Строки, Неопределено));
                
            КонецЕсли;    
            
        КонецЕсли; 
    КонецЦикла; 
    
КонецПроцедуры 

Процедура СкопироватьКоманду(Форма, ЭлементПриемник, ЭлементИсточник, ПрефиксКопии = "", ИменаКопируемыхЭлементов = Неопределено) Экспорт
    
    КомандаИсточник = Форма.Команды.Найти(ЭлементИсточник.ИмяКоманды);
    
    КомандаПриемник = Форма.Команды.Найти(ПрефиксКопии + КомандаИсточник.Имя);//Две кнопки могут ссылаться на одну команду

    
	Если КомандаПриемник = Неопределено Тогда
		
		Если ИменаКопируемыхЭлементов = Неопределено Тогда
			ИмяКопируемогоЭлемента = Неопределено;
		Иначе
			Попытка
				ИмяКопируемогоЭлемента = ИменаКопируемыхЭлементов.Получить(0);
			Исключение
				ИмяКопируемогоЭлемента = Неопределено;
			КонецПопытки
		КонецЕсли;
				
		Если ИмяКопируемогоЭлемента = Неопределено ИЛИ ИмяКопируемогоЭлемента.Имя = Неопределено Тогда
			ИмяЭлемента = ПрефиксКопии + КомандаИсточник.Имя;
		Иначе
			ИмяЭлемента = ИмяКопируемогоЭлемента.Имя;	
		КонецЕсли;

		
        КомандаПриемник = Форма.Команды.Добавить(ИмяЭлемента);
    КонецЕсли;     
    
    ЗаполнитьЗначенияСвойств(КомандаПриемник, КомандаИсточник, , "Имя");
    
    ЭлементПриемник.ИмяКоманды = КомандаПриемник.Имя;
    
КонецПроцедуры 

Процедура СкопироватьСобытия(ЭлементПриемник, ЭлементИсточник) Экспорт
    
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "ПриИзменении");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "НачалоВыбора");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "НачалоВыбораИзСписка");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "Очистка");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "Выбор");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "Регулирование");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "Открытие");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "ОбработкаВыбора");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "АвтоПодбор");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "ОкончаниеВводаТекста");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "ПриОбновленииСоставаПользовательскихНастроекНаСервере");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "ПриНачалеРедактирования");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "ПередНачаломДобавления");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "ПередНачаломИзменения");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "ПриАктивизацииСтроки");
	
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "Нажатие");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "НачалоПеретаскивания");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "ПроверкаПеретаскивания");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "ОкончаниеПеретаскивания");
    СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, "Перетаскивание");
  
КонецПроцедуры 

Процедура СкопироватьСобытие(ЭлементПриемник, ЭлементИсточник, ИмяСобытия) Экспорт
    
    Действие = ЭлементИсточник.ПолучитьДействие(ИмяСобытия);
    
    Если Действие <> "" Тогда
        ЭлементПриемник.УстановитьДействие(ИмяСобытия, Действие);
    КонецЕсли; 
    
КонецПроцедуры

#КонецОбласти

#Область ОбщегоНазначения

Процедура ЗаполнитьКоллекциюСвойств(КоллекцияПриемник, КоллекцияИсточник) Экспорт
    
    Для Каждого Элемент Из КоллекцияИсточник Цикл
        ЗаполнитьЗначенияСвойств(КоллекцияПриемник.Добавить(), Элемент);
    КонецЦикла;
    
КонецПроцедуры

#КонецОбласти
