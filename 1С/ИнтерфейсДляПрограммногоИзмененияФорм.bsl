Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Результат = дк_КлиентСервер.ПолучитьТипОбъектаСтрокойИИмяФормы(Форма.ИмяФормы);
	ТипОбъекта = Результат.ТипОбъекта;
	ИмяФормы = Результат.ИмяФормы;
	
	Если ТипОбъекта = "ЗаказКлиента" Тогда
		Если ИмяФормы = "ФормаДокумента" Тогда

		КонецЕсли;
	ИначеЕсли ТипОбъекта = "Номенклатура" Тогда	
		Если ИмяФормы = "ФормаЭлемента" Тогда
		
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#Область ГенерацияЭлементовФормы_СозданиеЭлементов

// Реквизиты - массив структур, содержащих параметры реквизита (см. конструктор Новый РеквизитФормы)
// Либо одиночная структура (если реквизит один)
// Имя и Тип должны присутствовать в структуре обязательно, тип может быть строкой, типом или описаниемТипов
// Заголовок (если он не задан) формируется функцией "ПолучитьЗаголовокПоИмени"
Процедура ДобавитьРеквизитыФормы(Форма, Реквизиты)

	НовыеРеквизиты = Новый Массив;
	
	Если ТипЗнч(Реквизиты) = Тип("Структура") Тогда
		Реквизит = Реквизиты;
		Реквизиты = Новый Массив;
		Реквизиты.Добавить(Реквизит);
	КонецЕсли;

	Для Каждого Реквизит Из Реквизиты Цикл
		
		Имя = Реквизит.Имя;
		Тип = Реквизит.Тип;
		Если ТипЗнч(Тип) = Тип("Строка") Тогда
			Тип = Новый ОписаниеТипов(Тип);
		ИначеЕсли ТипЗнч(Тип) = Тип("Тип") Тогда
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(Тип);
       		Тип = Новый ОписаниеТипов(МассивТипов);
		КонецЕсли;	
		Путь = Неопределено; Заголовок = Неопределено; СохраняемыеДанные = Неопределено;
		Реквизит.Свойство("Путь", Путь);
		Реквизит.Свойство("Заголовок", Заголовок);
		Реквизит.Свойство("СохраняемыеДанные", СохраняемыеДанные);
		Если Путь = Неопределено Тогда
			Путь = "";
		КонецЕсли;
		Если Заголовок = Неопределено Тогда
			Заголовок = ПолучитьЗаголовокПоИмени(Имя);
		КонецЕсли;
		Если СохраняемыеДанные = Неопределено Тогда
			СохраняемыеДанные = Ложь;
		КонецЕсли;

		НовыйРеквизит = Новый РеквизитФормы(Имя, Тип, Путь, Заголовок, СохраняемыеДанные);
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		
	КонецЦикла;
	
	Форма.ИзменитьРеквизиты(НовыеРеквизиты);
	
КонецПроцедуры

Функция ДобавитьКомандуФормы(Форма, Имя, Действие = "Подключаемый_ВыполнитьПереопределяемуюКоманду")
	
	Команда = Форма.Команды.Добавить(Имя);
	Команда.Заголовок = ПолучитьЗаголовокПоИмени(Имя);
	Команда.Действие = Действие;
	Возврат Команда	
	
КонецФункции

Функция ДобавитьПолеФормы(Форма, ПутьКданным, Группа = Неопределено, ЭлементПередКоторымВставить = Неопределено, ВидПоля = Неопределено, Эталон = Неопределено)

	Поле = ПолучитьРеквизит(Форма, ПутьКданным);
	Родитель = Поле.Родитель;
	Поле = Поле.Реквизит;         
	ИмяЭлемента = ?(Родитель = Неопределено, Поле.Имя, Родитель.Имя + Поле.Имя);
	
	Если ТипЗнч(Поле) = Тип("Объектметаданных") Тогда
		ЭтоРеквизитОбъекта = Истина;
	Иначе
		ЭтоРеквизитОбъекта = Ложь;
	КонецЕсли;
	
	ВидПоляУказан = Истина;
	Если ВидПоля = Неопределено Тогда
		ВидПоляУказан = Ложь;
		
		Если ЭтоРеквизитОбъекта Тогда
			СвойствоТип = "Тип";
		Иначе
			СвойствоТип = "ТипЗначения";
		КонецЕсли;

		Если Поле[СвойствоТип].Типы().Количество() = 1 И Поле[СвойствоТип].Типы()[0] = Тип("Булево") Тогда
			ВидПоля = ВидПоляФормы.ПолеФлажка;
		Иначе
			ВидПоля = ВидПоляФормы.ПолеВвода;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ЭлементПередКоторымВставить) = Тип("Число") Тогда
		ГруппаДляПоискаМестаВставки = Группа;
		Если ГруппаДляПоискаМестаВставки = Неопределено Тогда
			ГруппаДляПоискаМестаВставки = Форма;
		КонецЕсли;
		Если ГруппаДляПоискаМестаВставки.ПодчиненныеЭлементы.Количество() < ЭлементПередКоторымВставить Тогда
			ЭлементПередКоторымВставить = ГруппаДляПоискаМестаВставки.ПодчиненныеЭлементы.Количество();
		ИначеЕсли ЭлементПередКоторымВставить < 1 Тогда
			ЭлементПередКоторымВставить = 1;
		КонецЕсли;
		ЭлементПередКоторымВставить = ГруппаДляПоискаМестаВставки.ПодчиненныеЭлементы[ЭлементПередКоторымВставить - 1];	
	КонецЕсли;
	
	Если ЭлементПередКоторымВставить = Неопределено Тогда
		НовыйЭлемент = Форма.Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Группа);
	Иначе
		НовыйЭлемент = Форма.Элементы.Вставить(ИмяЭлемента, Тип("ПолеФормы"), Группа, ЭлементПередКоторымВставить);
	КонецЕсли;

	Если Эталон <> Неопределено Тогда     
		ИсключаемыеСвойства = "ПутьКДанным, Заголовок, Подсказка"; 
		Если Эталон.Вид = ВидПоляФормы.ПолеВвода Тогда
			ИсключаемыеСвойства = ИсключаемыеСвойства + ", ВыделенныйТекст, СвязьПоТипу, ПодсказкаВвода, ФормаВыбора";
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, Эталон, , ИсключаемыеСвойства);
	КонецЕсли;
	
	Если ВидПоляУказан ИЛИ Эталон = Неопределено Тогда
		НовыйЭлемент.Вид = ВидПоля;	
	КонецЕсли;
	
	НовыйЭлемент.Заголовок = ?(ЭтоРеквизитОбъекта, Поле.Синоним, Поле.Заголовок); 	
	НовыйЭлемент.ПутьКДанным = ?(ЭтоРеквизитОбъекта, "Объект.", "") + ?(Родитель = Неопределено, "", Родитель.Имя + ".") + Поле.Имя;

	Возврат НовыйЭлемент; 

КонецФункции

Функция ДобавитьКнопкуФормы(Форма, Команда, Группа = Неопределено, ЭлементПередКоторымВставить = Неопределено, ВидКоманды = Неопределено, Эталон = Неопределено)
	
	ВидКомандыУказан = Истина;
	Если ВидКоманды = Неопределено Тогда
		ВидКомандыУказан = Ложь;
		ВидКоманды = ВидКнопкиФормы.ОбычнаяКнопка;
	КонецЕсли;
	
	Если ТипЗнч(ЭлементПередКоторымВставить) = Тип("Число") Тогда
		ГруппаДляПоискаМестаВставки = Группа;
		Если ГруппаДляПоискаМестаВставки = Неопределено Тогда
			ГруппаДляПоискаМестаВставки = Форма;
		КонецЕсли;
		Если ГруппаДляПоискаМестаВставки.ПодчиненныеЭлементы.Количество() < ЭлементПередКоторымВставить Тогда
			ЭлементПередКоторымВставить = ГруппаДляПоискаМестаВставки.ПодчиненныеЭлементы.Количество();
		ИначеЕсли ЭлементПередКоторымВставить < 1 Тогда
			ЭлементПередКоторымВставить = 1;
		КонецЕсли;
		ЭлементПередКоторымВставить = ГруппаДляПоискаМестаВставки.ПодчиненныеЭлементы[ЭлементПередКоторымВставить - 1];	
	КонецЕсли;
	
	Если ЭлементПередКоторымВставить = Неопределено Тогда
		НовыйЭлемент = Форма.Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Группа);
	Иначе
		НовыйЭлемент = Форма.Элементы.Вставить(Команда.Имя, Тип("КнопкаФормы"), Группа, ЭлементПередКоторымВставить);
	КонецЕсли;

	Если Эталон <> Неопределено Тогда     
		ИсключаемыеСвойства = "ИмяКоманды, Заголовок"; 
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, Эталон, , ИсключаемыеСвойства);
	КонецЕсли;
	
	Если ВидКомандыУказан ИЛИ Эталон = Неопределено Тогда
		НовыйЭлемент.Вид = ВидКоманды;
	КонецЕсли;

	НовыйЭлемент.ИмяКоманды = Команда.Имя;
	НовыйЭлемент.Заголовок = Команда.Заголовок;

	Возврат НовыйЭлемент; 

КонецФункции

Функция ДобавитьГруппуФормы(Форма, ИмяЭлемента, Группа = Неопределено,  ЭлементПередКоторымВставить = Неопределено, ВидГруппы = Неопределено, Эталон = Неопределено)

	ВидГруппыУказан = Истина;
	Если ВидГруппы = Неопределено Тогда
		ВидГруппыУказан = Ложь;
		ВидГруппы = ВидГруппыФормы.ОбычнаяГруппа;
	КонецЕсли;
	
	Если ТипЗнч(ЭлементПередКоторымВставить) = Тип("Число") Тогда
		ГруппаДляПоискаМестаВставки = Группа;
		Если ГруппаДляПоискаМестаВставки = Неопределено Тогда
			ГруппаДляПоискаМестаВставки = Форма;
		КонецЕсли;
		Если ГруппаДляПоискаМестаВставки.ПодчиненныеЭлементы.Количество() < ЭлементПередКоторымВставить Тогда
			ЭлементПередКоторымВставить = ГруппаДляПоискаМестаВставки.ПодчиненныеЭлементы.Количество();
		ИначеЕсли ЭлементПередКоторымВставить < 1 Тогда
			ЭлементПередКоторымВставить = 1;
		КонецЕсли;
		ЭлементПередКоторымВставить = ГруппаДляПоискаМестаВставки.ПодчиненныеЭлементы[ЭлементПередКоторымВставить - 1];	
	КонецЕсли;
	
	Если ЭлементПередКоторымВставить = Неопределено Тогда
		НовыйЭлемент = Форма.Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Группа);
	Иначе
		НовыйЭлемент = Форма.Элементы.Вставить(ИмяЭлемента, Тип("ГруппаФормы"), Группа, ЭлементПередКоторымВставить);
	КонецЕсли;

	Если Эталон <> Неопределено Тогда     
		ИсключаемыеСвойства = "Заголовок, Подсказка"; 
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, Эталон, , ИсключаемыеСвойства);
	КонецЕсли;

	Если ВидГруппыУказан ИЛИ Эталон = Неопределено Тогда
		НовыйЭлемент.Вид = ВидГруппы;	
	КонецЕсли;
	
	Группа.Заголовок = ПолучитьЗаголовокПоИмени(ИмяЭлемента);

	Возврат НовыйЭлемент; 

КонецФункции

Функция ПолучитьРеквизит(Форма, Путь)
	
	СтруктураВозврата = Новый Структура("Реквизит, Родитель");
	ПутьРазделенныйТочками = СтрРазделить(Путь, ".");
	Если ПутьРазделенныйТочками.Количество() > 1 И ПутьРазделенныйТочками[0] = "Объект" Тогда
		ПутьРазделенныйТочками.Удалить(0);
		Если ПутьРазделенныйТочками.Количество() = 1 Тогда
			СтруктураВозврата.Реквизит = Форма.РеквизитФормыВЗначение("Объект").Метаданные().Реквизиты[ПутьРазделенныйТочками[0]];
			Возврат СтруктураВозврата;
		Иначе
			СтруктураВозврата.Родитель = Форма.РеквизитФормыВЗначение("Объект").Метаданные().ТабличныеЧасти[ПутьРазделенныйТочками[0]];
			СтруктураВозврата.Реквизит = СтруктураВозврата.Родитель.Реквизиты[ПутьРазделенныйТочками[1]]; 
			Возврат СтруктураВозврата;	
		КонецЕсли 	
	КонецЕсли;
	МассивРеквизитов = Форма.ПолучитьРеквизиты();
	Для Каждого Стр Из МассивРеквизитов Цикл
		Если 
			ПутьРазделенныйТочками.Количество() > 1 И 
			(
			(Стр.ТипЗначения.Типы().Количество() = 1 И Стр.ТипЗначения.Типы()[0] = Тип("ТаблицаЗначений")) ИЛИ 
			(Стр.ТипЗначения.Типы().Количество() = 1 И Стр.ТипЗначения.Типы()[0] = Тип("ДеревоЗначений"))
			) 
		Тогда
			Если Стр.Имя = ПутьРазделенныйТочками[0] Тогда 
				СтруктураВозврата.Родитель = Стр;
			Иначе
				Продолжить;
			КонецЕсли;
			РеквизитыТаблицы = Форма.ПолучитьРеквизиты(Стр.Имя);
			Для Каждого СтрСтр Из РеквизитыТаблицы Цикл
				Если СтрСтр.Имя = ПутьРазделенныйТочками[1] Тогда
					СтруктураВозврата.Реквизит = СтрСтр;
					Возврат СтруктураВозврата;
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если Стр.Имя = Путь Тогда
				СтруктураВозврата.Реквизит = Стр;
				Возврат СтруктураВозврата;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьЗаголовокПоИмени(Имя)
	
	ИмяБезПрефикса = Имя;
	Если Найти(Имя, "_") > 1 Тогда
		ИмяБезПрефикса = Прав(Имя, СтрДлина(Имя) - Найти(Имя, "_"));		
	КонецЕсли;
	
	Заголовок = "";
	Для Сч = 1 По СтрДлина(ИмяБезПрефикса) Цикл
		Символ = Сред(ИмяБезПрефикса, Сч, 1);	
		Если Сч > 1 Тогда
			Если ВРег(Символ) = Символ Тогда
				Заголовок = Заголовок + " ";
				Символ = Нрег(Символ);
			КонецЕсли;
		Иначе
			Символ = ВРег(Символ);	
		КонецЕсли;
		Заголовок = Заголовок + Символ; 
	КонецЦикла;
	
	Возврат Заголовок;
	
КонецФункции

#КонецОбласти

// Эту функцию размещать в клиентСерверном модуле, так как её можно вызывать и в других ситуациях
Функция ПолучитьТипОбъектаСтрокойИИмяФормы(ПолноеИмяФормы) Экспорт
	
	ЧастиИмениФормыРазделенныеТочками = СтрРазделить(ПолноеИмяФормы, ".");
	Если ЧастиИмениФормыРазделенныеТочками.Количество() = 2 Тогда
		ТипОбъекта = ЧастиИмениФормыРазделенныеТочками[0];
		ИмяФормы   = ЧастиИмениФормыРазделенныеТочками[1]; 
	ИначеЕсли ЧастиИмениФормыРазделенныеТочками.Количество() = 3 Тогда
		ТипОбъекта = ЧастиИмениФормыРазделенныеТочками[1];
		ИмяФормы   = ЧастиИмениФормыРазделенныеТочками[2]; 		
	Иначе
		ТипОбъекта = ЧастиИмениФормыРазделенныеТочками[1];
		ИмяФормы   = ЧастиИмениФормыРазделенныеТочками[3]; 
	КонецЕсли;

	Возврат Новый Структура("ТипОбъекта, ИмяФормы", ТипОбъекта, ИмяФормы);    

КонецФункции
