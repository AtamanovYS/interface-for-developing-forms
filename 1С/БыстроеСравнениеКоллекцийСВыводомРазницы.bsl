// Процедура сравнивает две таблицы значений с выводом дельт по каждой из строк, работает быстро, потому что основана на сворачивании
// 
// Параметры:
//  Таблица1 - сравниваемая таблица значений
//  Таблица2 - сравниваемая таблица значений
//  МассивСтрокиТаблицы1 - массив, в котором хранится разница первой таблицы относительно второй (строки, которые изменились, будут в обеих массивах)
//  МассивСтрокиТаблицы2 - массив, в котором хранится разница второй таблицы относительно первой (строки, которые изменились, будут в обеих массивах)
//  СтрокаПереченьКолонок - перечень колонок, разделенных запятыми, которые сравниваются, если не указано, то сравниваются все
//  СтрокаПереченьКолонок - перечень колонок, разделенных запятыми, которые не будут участвовать в сравнении
//  УчитыватьПорядок - булевский признак, по которому определяется, нужно ли при сравнении учитывать нумерацию строк или нет	
//
Процедура НайтиОтличияТаблиц(Таблица1, Таблица2, МассивСтрокиТаблицы1 = Неопределено, МассивСтрокиТаблицы2 = Неопределено, СтрокаПереченьКолонок = "", СтрокаИсключемыеКолонки = "", УчитыватьПорядок = Ложь)
            
    СтруктураИсключаемыеКолонки = Новый Структура(СтрокаИсключемыеКолонки);
    
    Если ЗначениеЗаполнено(СтрокаПереченьКолонок) Тогда            
        Если ЗначениеЗаполнено(СтрокаИсключемыеКолонки) Тогда
            РеальныйПереченьКолонок = "";
            СтруктураПереченьКолонок = Новый Структура(СтрокаПереченьКолонок);
            
            Для каждого ЭлементСтруктуры Из СтруктураПереченьКолонок Цикл
                ИмяКолонки = ЭлементСтруктуры.Ключ;
                Если Не СтруктураИсключаемыеКолонки.Свойство(ИмяКолонки) Тогда
                    РеальныйПереченьКолонок = РеальныйПереченьКолонок + ?(РеальныйПереченьКолонок = "", "", ", ") + ИмяКолонки;
                КонецЕсли;
            КонецЦикла;
        Иначе
            РеальныйПереченьКолонок = СтрокаПереченьКолонок;
        КонецЕсли;         
    Иначе
        
        РеальныйПереченьКолонок = "";
        
        Если ТипЗнч(Таблица1) = Тип("ТаблицаЗначений") Тогда
            Колонки = Таблица1.Колонки;
        Иначе
            Колонки = Таблица1.ВыгрузитьКолонки().Колонки;
        КонецЕсли;
        
        Для каждого Колонка Из Колонки Цикл
            Если Не СтруктураИсключаемыеКолонки.Свойство(Колонка.Имя) Тогда
                РеальныйПереченьКолонок = РеальныйПереченьКолонок + ?(РеальныйПереченьКолонок = "", "", ", ") + Колонка.Имя;
            КонецЕсли;
        КонецЦикла;
        
    КонецЕсли;

    Если ТипЗнч(Таблица1) = Тип("ТаблицаЗначений") Тогда
        ТаблицаОбщая = Таблица1.Скопировать(, РеальныйПереченьКолонок);
    Иначе
        ТаблицаОбщая = Таблица1.Выгрузить(, РеальныйПереченьКолонок);
    КонецЕсли;
	
    ТаблицаОбщая.Колонки.Добавить("Служебный_ПоказательТаблицы");
	ТаблицаОбщая.Колонки.Добавить("Служебный_ИндексСтроки");
	
	ИндексСтроки = 0;
    Для каждого СтрокаОбщейТаблицы Из ТаблицаОбщая Цикл
        СтрокаОбщейТаблицы.Служебный_ПоказательТаблицы = 1;
	СтрокаОбщейТаблицы.Служебный_ИндексСтроки = ИндексСтроки;	
	ИндексСтроки = ИндексСтроки + 1;
    КонецЦикла;
	
	ИндексСтроки = 0;
    Для каждого СтрокаТаблицы2 Из Таблица2 Цикл
        СтрокаОбщейТаблицы = ТаблицаОбщая.Добавить();
        ЗаполнитьЗначенияСвойств(СтрокаОбщейТаблицы, СтрокаТаблицы2);
        СтрокаОбщейТаблицы.Служебный_ПоказательТаблицы = 2;
	СтрокаОбщейТаблицы.Служебный_ИндексСтроки = ИндексСтроки;
	ИндексСтроки = ИндексСтроки + 1;
    КонецЦикла;
	
    Если УчитыватьПорядок Тогда
        ТаблицаОбщая.Свернуть("Служебный_ИндексСтроки, " + РеальныйПереченьКолонок, "Служебный_ПоказательТаблицы");
    Иначе
        ТаблицаОбщая.Свернуть(РеальныйПереченьКолонок, "Служебный_ПоказательТаблицы");
    КонецЕсли;
	
    // Строки ОбщейТаблицы, у которых Служебный_ПоказательТаблицы = 3, это совпавшие строки Таблицы1 и Таблицы2
	
    МассивСтрокиТаблицы1 = Новый Массив;
    СтрокиСПоказателем1 = ТаблицаОбщая.НайтиСтроки(Новый Структура("Служебный_ПоказательТаблицы", 1));
    Для каждого СтрокаОбщейТаблицы Из СтрокиСПоказателем1 Цикл
        МассивСтрокиТаблицы1.Добавить(СтрокаОбщейТаблицы);
    КонецЦикла;
    
    МассивСтрокиТаблицы2 = Новый Массив;
    СтрокиСПоказателем2 = ТаблицаОбщая.НайтиСтроки(Новый Структура("Служебный_ПоказательТаблицы", 2));
    Для каждого СтрокаОбщейТаблицы Из СтрокиСПоказателем2 Цикл
        МассивСтрокиТаблицы2.Добавить(СтрокаОбщейТаблицы);
    КонецЦикла;
       	    
КонецПроцедуры
